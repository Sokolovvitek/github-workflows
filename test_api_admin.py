import requests
import pytest
import json

BASE_URL = "https://hawkingbros.bsite.net/api"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
def log_response(endpoint, method, response):
    print("\n" + "=" * 50)
    print(f"üîé –ó–∞–ø—Ä–æ—Å: {method} {endpoint}")
    print(f"üìã –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code} - {response.reason}")
    print(f"‚è≤Ô∏è –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {response.elapsed.total_seconds()} —Å–µ–∫")
    print("-" * 50)

    try:
        json_data = response.json()
        print("üì• JSON-–æ—Ç–≤–µ—Ç:")

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ JSON —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
        pretty_json = json.dumps(json_data, indent=4, ensure_ascii=False)
        print(pretty_json)

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–≤–æ–¥ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        if isinstance(json_data, dict):
            print("\nüìä –ö–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è:")
            for key in ["Id", "Name", "Description", "TotalProducts"]:
                if key in json_data:
                    print(f"  {key}: {json_data[key]}")

        elif isinstance(json_data, list) and json_data:
            print("\nüìù –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:")
            first_item = json_data[0]
            for key, value in first_item.items():
                print(f"  {key}: {value}")

    except ValueError:
        print("‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç JSON –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.")
        print(f"üìÑ –°—ã—Ä–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:\n{response.text.encode('utf-8').decode('utf-8')}")

    print("=" * 50)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
def test_create_product_in_cart():
    value = 1
    url = f"{BASE_URL}/Admin/create?value={value}"
    response = requests.post(url)

    log_response(url, "POST", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: {response.status_code}"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
def test_get_cart_header():
    url = f"{BASE_URL}/ShoppingCart/header"
    response = requests.get(url)

    log_response(url, "GET", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã: {response.status_code}"

    data = response.json()
    assert "LogoImg" in data
    assert "UsedGuid" in data
    assert "UserName" in data

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
def test_get_cart_products():
    url = f"{BASE_URL}/ShoppingCart/products"
    response = requests.get(url)

    log_response(url, "GET", response)
    assert response.status_code in [200, 204], f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {response.status_code}"

    if response.status_code == 200:
        data = response.json()
        assert isinstance(data, list), "–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ø–∏—Å–∫–æ–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤"
        if data:
            product = data[0]
            assert "Id" in product
            assert "Name" in product

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
def test_delete_cart_products():
    url = f"{BASE_URL}/ShoppingCart/products"
    response = requests.delete(url)

    log_response(url, "DELETE", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: {response.status_code}"

    data = response.json()
    assert "Name" in data
    assert "Description" in data

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
def test_delete_specific_product():
    url = f"{BASE_URL}/ShoppingCart/product"
    payload = {"ProductId": 0, "UserGuid": "–≤–∞—à_guid"}

    response = requests.delete(url, json=payload)
    log_response(url, "DELETE", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: {response.status_code}"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
def test_get_cart_summary():
    url = f"{BASE_URL}/ShoppingCart/baskedsummary"
    response = requests.get(url)

    log_response(url, "GET", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã: {response.status_code}"

    data = response.json()
    assert "TotalProducts" in data

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
def test_get_viewed_list():
    url = f"{BASE_URL}/ShoppingCart/viewedList"
    response = requests.get(url)

    log_response(url, "GET", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {response.status_code}"
    assert isinstance(response.json(), list)

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
def test_increment_product_quantity():
    url = f"{BASE_URL}/ShoppingCart/quantityinc"
    payload = {"ProductId": 0, "UserGuid": "–≤–∞—à_guid"}

    response = requests.post(url, json=payload)
    log_response(url, "POST", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞: {response.status_code}"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
def test_decrement_product_quantity():
    url = f"{BASE_URL}/ShoppingCart/quantitydec"
    payload = {"ProductId": 0, "UserGuid": "–≤–∞—à_guid"}

    response = requests.post(url, json=payload)
    log_response(url, "POST", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–º–µ–Ω—å—à–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞: {response.status_code}"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
def test_change_product_quantity():
    url = f"{BASE_URL}/ShoppingCart/changequantity"
    payload = {"ProductId": 0, "UserGuid": "–≤–∞—à_guid", "Value": 1}

    response = requests.post(url, json=payload)
    log_response(url, "POST", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞: {response.status_code}"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
def test_apply_discount():
    url = f"{BASE_URL}/ShoppingCart/discount"
    payload = {"DiscountName": "–≤–∞—à–∞_—Å–∫–∏–¥–∫–∞", "UsedGuid": "–≤–∞—à_guid"}

    response = requests.post(url, json=payload)
    log_response(url, "POST", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ —Å–∫–∏–¥–∫–∏: {response.status_code}"

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–∏–¥–∫–∏
def test_remove_discount():
    url = f"{BASE_URL}/ShoppingCart/discount"
    response = requests.delete(url)

    log_response(url, "DELETE", response)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∫–∏–¥–∫–∏: {response.status_code}"
